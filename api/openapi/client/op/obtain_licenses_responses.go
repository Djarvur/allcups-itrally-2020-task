// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Djarvur/allcups-itrally-2020-task/api/openapi/model"
)

// ObtainLicensesReader is a Reader for the ObtainLicenses structure.
type ObtainLicensesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObtainLicensesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObtainLicensesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 402:
		result := NewObtainLicensesPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewObtainLicensesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewObtainLicensesOK creates a ObtainLicensesOK with default headers values
func NewObtainLicensesOK() *ObtainLicensesOK {
	return &ObtainLicensesOK{}
}

/*ObtainLicensesOK handles this case with default header values.

list of licenses issued
*/
type ObtainLicensesOK struct {
	Payload model.Licenses
}

func (o *ObtainLicensesOK) Error() string {
	return fmt.Sprintf("[POST /license][%d] obtainLicensesOK  %+v", 200, o.Payload)
}

func (o *ObtainLicensesOK) GetPayload() model.Licenses {
	return o.Payload
}

func (o *ObtainLicensesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObtainLicensesPaymentRequired creates a ObtainLicensesPaymentRequired with default headers values
func NewObtainLicensesPaymentRequired() *ObtainLicensesPaymentRequired {
	return &ObtainLicensesPaymentRequired{}
}

/*ObtainLicensesPaymentRequired handles this case with default header values.

Not enough money
*/
type ObtainLicensesPaymentRequired struct {
}

func (o *ObtainLicensesPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /license][%d] obtainLicensesPaymentRequired ", 402)
}

func (o *ObtainLicensesPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewObtainLicensesInternalServerError creates a ObtainLicensesInternalServerError with default headers values
func NewObtainLicensesInternalServerError() *ObtainLicensesInternalServerError {
	return &ObtainLicensesInternalServerError{}
}

/*ObtainLicensesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ObtainLicensesInternalServerError struct {
}

func (o *ObtainLicensesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /license][%d] obtainLicensesInternalServerError ", 500)
}

func (o *ObtainLicensesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
