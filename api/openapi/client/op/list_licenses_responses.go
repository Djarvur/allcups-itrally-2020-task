// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Djarvur/allcups-itrally-2020-task/api/openapi/model"
)

// ListLicensesReader is a Reader for the ListLicenses structure.
type ListLicensesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListLicensesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListLicensesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewListLicensesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListLicensesOK creates a ListLicensesOK with default headers values
func NewListLicensesOK() *ListLicensesOK {
	return &ListLicensesOK{}
}

/*ListLicensesOK handles this case with default header values.

list of licenses issued
*/
type ListLicensesOK struct {
	Payload model.Licenses
}

func (o *ListLicensesOK) Error() string {
	return fmt.Sprintf("[GET /license][%d] listLicensesOK  %+v", 200, o.Payload)
}

func (o *ListLicensesOK) GetPayload() model.Licenses {
	return o.Payload
}

func (o *ListLicensesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLicensesInternalServerError creates a ListLicensesInternalServerError with default headers values
func NewListLicensesInternalServerError() *ListLicensesInternalServerError {
	return &ListLicensesInternalServerError{}
}

/*ListLicensesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListLicensesInternalServerError struct {
}

func (o *ListLicensesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /license][%d] listLicensesInternalServerError ", 500)
}

func (o *ListLicensesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
