// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CashReader is a Reader for the Cash structure.
type CashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCashCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewCashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCashCreated creates a CashCreated with default headers values
func NewCashCreated() *CashCreated {
	return &CashCreated{}
}

/*CashCreated handles this case with default header values.

Cashed
*/
type CashCreated struct {
}

func (o *CashCreated) Error() string {
	return fmt.Sprintf("[POST /cash][%d] cashCreated ", 201)
}

func (o *CashCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCashInternalServerError creates a CashInternalServerError with default headers values
func NewCashInternalServerError() *CashInternalServerError {
	return &CashInternalServerError{}
}

/*CashInternalServerError handles this case with default header values.

Internal Server Error
*/
type CashInternalServerError struct {
}

func (o *CashInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cash][%d] cashInternalServerError ", 500)
}

func (o *CashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
