// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DigCubeHandlerFunc turns a function with the right signature into a dig cube handler
type DigCubeHandlerFunc func(DigCubeParams) DigCubeResponder

// Handle executing the request and returning a response
func (fn DigCubeHandlerFunc) Handle(params DigCubeParams) DigCubeResponder {
	return fn(params)
}

// DigCubeHandler interface for that can handle valid dig cube params
type DigCubeHandler interface {
	Handle(DigCubeParams) DigCubeResponder
}

// NewDigCube creates a new http.Handler for the dig cube operation
func NewDigCube(ctx *middleware.Context, handler DigCubeHandler) *DigCube {
	return &DigCube{Context: ctx, Handler: handler}
}

/*DigCube swagger:route POST /dig digCube

Returns a list of found treasures IDs.

*/
type DigCube struct {
	Context *middleware.Context
	Handler DigCubeHandler
}

func (o *DigCube) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDigCubeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
